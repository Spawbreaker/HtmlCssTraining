/* 
    Color Pallete
    #0a100d Black
    #b9baa3 White
    #d6d5c9 White
    #a22c29 Red
    #902923 Red
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.blackBg {
  background-color: #0a100d;
}

.redBg {
  background-color: #a22c29;
}

.whiteBg {
  background-color: #b9baa3;
}

.blackFg {
  color: #0a100d;
}

.redFg {
  color: #a22c29;
}

.whiteFg {
  color: #b9baa3;
}

.banner {
  width: 33vw;
}

.floatLeft {
  float: left;
}

.clearLeft {
  clear: left;
}

.floatRight {
  float: right;
}

.clearNone {
  clear: none;
}

.clearRight {
  clear: right;
}

.clearBoth {
  clear: both;
}

.windowWidth {
  box-sizing: border-box;
  border: 3px solid black;
  width: 100vw;
  height: 30vh;
}

.overflow {
  overflow: hidden;
}

.column {
  width: 33.33%;
  height: 100vh;
}

.staticPosition {
  position: static;
  /* Done by default */
}

.relativePosition {
  position: relative;
  /* The position is relative to the original point where the item used to be on. */
}

.absolutePosition {
  position: absolute;
  /* It positions itself absolutely on the last parent with a position defined.
  The top-most defined is the body. */
}

.fixedPosition {
  position: fixed;
  /* The item will stay fixed somewhere on the screen, regardless of scrolling.
  It's useful for navigation bars. */
}

.testPosition {
  background: #a22c29;
  position: fixed;
  top: 50vh;
  left: 50vw;
}

.zImg {
  width: 100vw;
  position: fixed;
  top: 0px;
  left: 0px;
  z-index: -1;
  /* z-index allows us to put things back and forth on the screen
  It only works on fixed, absolute and relative, not with static */
}

@media screen and (min-width: 400px) {
  body {
    background: #0a100d;
    color: #b9baa3;
  }
}

p::before {
  content: "This is inserted ";
  border: 4px #902923 solid;
}
p::after {
  /* The 'content' attribute is required, always */
  content: " this is inserted.";
  display: block;
  border: 4px #0a100d solid;
}

.imgHolder {
  width: calc(100vw - 10px);
  border: #902923 5px dashed;
}

img {
  width: 100%;
  display: block;
}
